digraph pg_ddl {
rankdir = LR
"ddlx_alter_owner(oid)" -> "ddlx_identify(oid)";
"ddlx_alter_table_defaults(regclass)" -> "ddlx_describe(regclass)";
"ddlx_comment(oid)" -> "ddlx_identify(oid)";
"ddlx_create_aggregate(regproc)" -> "ddlx_identify(oid)";
"ddlx_create_class(regclass)" -> "ddlx_banner(text,text,text,text,text)";
"ddlx_create_class(regclass)" -> "ddlx_comment(oid)";
"ddlx_create_class(regclass)" -> "ddlx_create_index(regclass)";
"ddlx_create_class(regclass)" -> "ddlx_create_sequence(regclass)";
"ddlx_create_class(regclass)" -> "ddlx_create_table(regclass)";
"ddlx_create_class(regclass)" -> "ddlx_create_view(regclass)";
"ddlx_create_class(regclass)" -> "ddlx_describe(regclass)";
"ddlx_create_class(regclass)" -> "ddlx_identify(oid)";
"ddlx_create_constraints(regclass)" -> "ddlx_get_constraints(regclass)";
"ddlx_create_function(regproc)" -> "ddlx_banner(text,text,text,text,text)";
"ddlx_create_function(regproc)" -> "ddlx_comment(oid)";
"ddlx_create_function(regproc)" -> "ddlx_create_aggregate(regproc)";
"ddlx_create_function(regproc)" -> "ddlx_identify(oid)";
"ddlx_create_indexes(regclass)" -> "ddlx_get_indexes(regclass)";
"ddlx_create(oid)" -> "ddlx_create_constraint(oid)";
"ddlx_create(oid)" -> "ddlx_create_default(oid)";
"ddlx_create(oid)" -> "ddlx_create(regclass)";
"ddlx_create(oid)" -> "ddlx_create(regnamespace)";
"ddlx_create(oid)" -> "ddlx_create(regoper)";
"ddlx_create(oid)" -> "ddlx_create(regoperator)";
"ddlx_create(oid)" -> "ddlx_create(regproc)";
"ddlx_create(oid)" -> "ddlx_create(regprocedure)";
"ddlx_create(oid)" -> "ddlx_create(regrole)";
"ddlx_create(oid)" -> "ddlx_create(regtype)";
"ddlx_create(oid)" -> "ddlx_create_trigger(oid)";
"ddlx_create(oid)" -> "ddlx_identify(oid)";
"ddlx_create(regclass)" -> "ddlx_alter_owner(oid)";
"ddlx_create(regclass)" -> "ddlx_alter_table_defaults(regclass)";
"ddlx_create(regclass)" -> "ddlx_create_class(regclass)";
"ddlx_create(regclass)" -> "ddlx_create_constraints(regclass)";
"ddlx_create(regclass)" -> "ddlx_create_indexes(regclass)";
"ddlx_create(regclass)" -> "ddlx_create(regtype)";
"ddlx_create(regclass)" -> "ddlx_create_rules(regclass)";
"ddlx_create(regclass)" -> "ddlx_create_triggers(regclass)";
"ddlx_create(regclass)" -> "ddlx_grants(regclass)";
"ddlx_create(regnamespace)" -> "ddlx_alter_owner(oid)";
"ddlx_create(regnamespace)" -> "ddlx_comment(oid)";
"ddlx_create(regoper)" -> "ddlx_alter_owner(oid)";
"ddlx_create(regoper)" -> "ddlx_comment(oid)";
"ddlx_create(regoperator)" -> "ddlx_create(regoper)";
"ddlx_create(regproc)" -> "ddlx_alter_owner(oid)";
"ddlx_create(regproc)" -> "ddlx_create_function(regproc)";
"ddlx_create(regproc)" -> "ddlx_grants(regproc)";
"ddlx_create(regprocedure)" -> "ddlx_create(regproc)";
"ddlx_create(regrole)" -> "ddlx_create_role(regrole)";
"ddlx_create(regrole)" -> "ddlx_grants(regrole)";
"ddlx_create(regtype)" -> "ddlx_alter_owner(oid)";
"ddlx_create(regtype)" -> "ddlx_comment(oid)";
"ddlx_create(regtype)" -> "ddlx_create_class(regclass)";
"ddlx_create(regtype)" -> "ddlx_create(regclass)";
"ddlx_create(regtype)" -> "ddlx_create_type_base(regtype)";
"ddlx_create(regtype)" -> "ddlx_create_type_domain(regtype)";
"ddlx_create(regtype)" -> "ddlx_create_type_enum(regtype)";
"ddlx_create(regtype)" -> "ddlx_create_type_range(regtype)";
"ddlx_create_rules(regclass)" -> "ddlx_get_rules(regclass)";
"ddlx_create_sequence(regclass)" -> "ddlx_identify(oid)";
"ddlx_create_table(regclass)" -> "ddlx_describe(regclass)";
"ddlx_create_table(regclass)" -> "ddlx_identify(oid)";
"ddlx_create_triggers(regclass)" -> "ddlx_get_triggers(regclass)";
"ddlx_drop(oid)" -> "ddlx_drop_constraint(oid)";
"ddlx_drop(oid)" -> "ddlx_drop_default(oid)";
"ddlx_drop(oid)" -> "ddlx_drop_trigger(oid)";
"ddlx_drop(oid)" -> "ddlx_identify(oid)";
"ddlx_get_dependants(oid)" -> "ddlx_get_dependants_recursive(oid)";
"ddlx_grants(regclass)" -> "ddlx_identify(oid)";
"ddlx_grants(regproc)" -> "ddlx_identify(oid)";
"ddlx_parts(oid)" -> "ddlx_create(oid)";
"ddlx_parts(oid)" -> "ddlx_drop(oid)";
"ddlx_parts(oid)" -> "ddlx_get_dependants(oid)";
"ddlx_script(oid)" -> "ddlx_parts(oid)";
"ddlx_script(text)" -> "ddlx_script(oid)";
}
